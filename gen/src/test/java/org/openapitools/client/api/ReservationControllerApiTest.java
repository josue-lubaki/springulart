/*
 * Springular REST API
 * Springular REST API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: josue.lubaki@uqtr.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ReservationDTOReq;
import org.openapitools.client.model.ReservationDTORes;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReservationControllerApi
 */
@Ignore
public class ReservationControllerApiTest {

    private final ReservationControllerApi api = new ReservationControllerApi();

    
    /**
     * Accept a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void acceptReservationUsingPATCHTest() throws ApiException {
        Long id = null;
        ReservationDTOReq reservationDTOReq = null;
        ReservationDTORes response = api.acceptReservationUsingPATCH(id, reservationDTOReq);

        // TODO: test validations
    }
    
    /**
     * Save a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReservationUsingPOSTTest() throws ApiException {
        ReservationDTOReq reservationDTOReq = null;
        ReservationDTORes response = api.createReservationUsingPOST(reservationDTOReq);

        // TODO: test validations
    }
    
    /**
     * Delete a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReservationUsingDELETETest() throws ApiException {
        Long id = null;
        api.deleteReservationUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Get all reservations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllReservationsUsingGETTest() throws ApiException {
        List<ReservationDTORes> response = api.getAllReservationsUsingGET();

        // TODO: test validations
    }
    
    /**
     * Get reservation by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReservationByIdUsingGETTest() throws ApiException {
        Long id = null;
        ReservationDTORes response = api.getReservationByIdUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Update a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReservationUsingPUTTest() throws ApiException {
        Long id = null;
        ReservationDTOReq reservationDTOReq = null;
        ReservationDTORes response = api.updateReservationUsingPUT(id, reservationDTOReq);

        // TODO: test validations
    }
    
}

/*
 * Springular REST API
 * Springular REST API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: josue.lubaki@uqtr.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ReservationDTOReq;
import org.openapitools.client.model.ReservationDTORes;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReservationManagementControllerApi
 */
@Ignore
public class ReservationManagementControllerApiTest {

    private final ReservationManagementControllerApi api = new ReservationManagementControllerApi();

    
    /**
     * Save a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReservationUsingPOST1Test() throws ApiException {
        ReservationDTOReq reservationDTOReq = null;
        ReservationDTORes response = api.createReservationUsingPOST1(reservationDTOReq);

        // TODO: test validations
    }
    
    /**
     * Delete a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReservationUsingDELETE1Test() throws ApiException {
        Long id = null;
        api.deleteReservationUsingDELETE1(id);

        // TODO: test validations
    }
    
    /**
     * Get all reservations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllReservationsUsingGET1Test() throws ApiException {
        List<ReservationDTORes> response = api.getAllReservationsUsingGET1();

        // TODO: test validations
    }
    
    /**
     * Get a reservation by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReservationByIdUsingGET1Test() throws ApiException {
        Long id = null;
        ReservationDTORes response = api.getReservationByIdUsingGET1(id);

        // TODO: test validations
    }
    
    /**
     * Update a reservation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReservationUsingPUT1Test() throws ApiException {
        Long id = null;
        ReservationDTOReq reservationDTOReq = null;
        ReservationDTORes response = api.updateReservationUsingPUT1(id, reservationDTOReq);

        // TODO: test validations
    }
    
}
